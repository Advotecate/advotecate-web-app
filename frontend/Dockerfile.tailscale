# Use Node.js 18 Alpine for smaller size
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package.json package-lock.json* ./
RUN if [ -f package-lock.json ]; then npm ci; else npm install; fi

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the React app with Vite
RUN npm run build

# Production image using nginx with Tailscale
FROM nginx:alpine AS runner
WORKDIR /usr/share/nginx/html

# Install Tailscale and required packages
RUN apk update && apk add --no-cache \
    iptables \
    iproute2 \
    ca-certificates \
    curl \
    su-exec \
    && rm -rf /var/cache/apk/*

# Install Tailscale directly via apk
RUN apk add --no-cache tailscale

# Remove default nginx static assets
RUN rm -rf ./*

# Copy static assets from builder stage
COPY --from=builder /app/dist .

# Copy nginx configuration template
COPY nginx.conf /etc/nginx/nginx.conf.template

# Create startup script
COPY start-with-tailscale.sh /
RUN chmod +x /start-with-tailscale.sh

EXPOSE 3000

# Run as root to allow Tailscale to configure networking
CMD ["/start-with-tailscale.sh"]