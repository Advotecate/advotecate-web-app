apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase-auth
  namespace: supabase
  labels:
    app: supabase
    component: auth
spec:
  replicas: 2
  selector:
    matchLabels:
      app: supabase
      component: auth
  template:
    metadata:
      labels:
        app: supabase
        component: auth
    spec:
      containers:
      - name: gotrue
        image: supabase/gotrue:v2.99.0
        ports:
        - containerPort: 9999
          name: http
        envFrom:
        - configMapRef:
            name: supabase-config
        - secretRef:
            name: supabase-secrets
        env:
        - name: GOTRUE_DB_DRIVER
          value: "postgres"
        - name: GOTRUE_DB_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: AUTH_DATABASE_URL
        - name: GOTRUE_API_HOST
          value: "0.0.0.0"
        - name: GOTRUE_API_PORT
          value: "9999"
        - name: GOTRUE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 9999
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 9999
          initialDelaySeconds: 60
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: supabase-auth
  namespace: supabase
  labels:
    app: supabase
    component: auth
spec:
  type: ClusterIP
  ports:
  - port: 9999
    targetPort: 9999
    protocol: TCP
    name: http
  selector:
    app: supabase
    component: auth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase-rest
  namespace: supabase
  labels:
    app: supabase
    component: rest
spec:
  replicas: 3
  selector:
    matchLabels:
      app: supabase
      component: rest
  template:
    metadata:
      labels:
        app: supabase
        component: rest
    spec:
      containers:
      - name: postgrest
        image: postgrest/postgrest:v11.2.0
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - configMapRef:
            name: supabase-config
        - secretRef:
            name: supabase-secrets
        env:
        - name: PGRST_DB_URI
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: DATABASE_URL
        - name: PGRST_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: JWT_SECRET
        - name: PGRST_SERVER_HOST
          value: "*"
        - name: PGRST_SERVER_PORT
          value: "3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: supabase-rest
  namespace: supabase
  labels:
    app: supabase
    component: rest
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: supabase
    component: rest

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase-realtime
  namespace: supabase
  labels:
    app: supabase
    component: realtime
spec:
  replicas: 2
  selector:
    matchLabels:
      app: supabase
      component: realtime
  template:
    metadata:
      labels:
        app: supabase
        component: realtime
    spec:
      containers:
      - name: realtime
        image: supabase/realtime:v2.25.35
        ports:
        - containerPort: 4000
          name: http
        envFrom:
        - configMapRef:
            name: supabase-config
        - secretRef:
            name: supabase-secrets
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: supabase-config
              key: POSTGRES_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: supabase-config
              key: POSTGRES_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: supabase-config
              key: POSTGRES_DB
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: supabase-config
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: POSTGRES_PASSWORD
        - name: DB_SSL
          value: "true"
        - name: PORT
          value: "4000"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          httpGet:
            path: /
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 4000
          initialDelaySeconds: 60
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: supabase-realtime
  namespace: supabase
  labels:
    app: supabase
    component: realtime
spec:
  type: ClusterIP
  ports:
  - port: 4000
    targetPort: 4000
    protocol: TCP
    name: http
  selector:
    app: supabase
    component: realtime

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supabase-storage
  namespace: supabase
  labels:
    app: supabase
    component: storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: supabase
      component: storage
  template:
    metadata:
      labels:
        app: supabase
        component: storage
    spec:
      containers:
      - name: storage-api
        image: supabase/storage-api:v0.43.11
        ports:
        - containerPort: 5000
          name: http
        envFrom:
        - configMapRef:
            name: supabase-config
        - secretRef:
            name: supabase-secrets
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: STORAGE_DATABASE_URL
        - name: PGOPTIONS
          value: "-c search_path=storage,public"
        - name: FILE_SIZE_LIMIT
          value: "52428800"
        - name: STORAGE_BACKEND
          value: "gcs"
        - name: TENANT_ID
          value: "stub"
        - name: REGION
          value: "us-central1"
        - name: GLOBAL_S3_BUCKET
          value: "advotecate-supabase-storage"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          httpGet:
            path: /status
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /status
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: supabase-storage
  namespace: supabase
  labels:
    app: supabase
    component: storage
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: supabase
    component: storage